[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dt-extensions-sdk"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
    { name = "dlopes7", email = "davidribeirolopes@gmail.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[project.optional-dependencies]
cli = [ "dt-cli>=1.6.13", "typer[all]", "pyyaml"]

[project.urls]
Documentation = "https://github.com/dynatrace-extensions/dt-extensions-python-sdk#readme"
Issues = "https://github.com/dynatrace-extensions/dt-extensions-python-sdk/issues"
Source = "https://github.com/dynatrace-extensions/dt-extensions-python-sdk"

[tool.hatch.version]
path = "dynatrace_extension/__about__.py"

[tool.hatch.build]
artifacts  = [
  "dynatrace_extension/cli/create/extension_template/**/*",
]

[tool.hatch.build.targets.wheel]
packages = ["dynatrace_extension"]

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
    "typer[all]",
    "pyyaml",
    "dt-cli>=1.6.13"
]

[tool.hatch.envs.default.scripts]
test = "python -m pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "- coverage combine",
    "coverage report",
]
cov = [
    "test-cov",
    "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.9", "3.10", "3.11"]

[tool.hatch.envs.lint]
detached = true
dependencies = [
    "black>=23.1.0",
    "mypy>=1.0.0",
    "ruff>=0.0.243",
    "typer[all]",
    "pyyaml"
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:dynatrace_extension tests}"
style = [
    "ruff {args:.}",
    "black --check --diff {args:.}",
]
fmt = [
    "black {args:.}",
    "ruff --fix {args:.}",
    "style",
]
all = [
    "style",
    "typing",
]

[tool.hatch.envs.docs]
dependencies = [
    "Sphinx",
    "sphinx-wagtail-theme",
    "sphinxcontrib-programoutput",
    "wutch",
    "dt-cli",
    "typer[all]",
    "pyyaml",
    "tomli"
]

[tool.hatch.envs.docs.env-vars]
TERM = "dumb"

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build"
clean = "rm -rf docs/_build"
rebuild = [
    "clean",
    "build",
]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 160
select = [
    "A",
    "ARG",
    "B",
    "C",
    "DTZ",
    "E",
    "EM",
    "F",
    "FBT",
    "I",
    "ICN",
    "ISC",
    "N",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "Q",
    "RUF",
    "S",
    "T",
    "TID",
    "UP",
    "W",
    "YTT",
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    "B027",
    # Allow boolean arguments
    "FBT001", "FBT002", "FBT003",
    # Ignore checks for possible passwords
    "S105", "S106", "S107",
    # Ignore complexity
    "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
    # Allow relative imports
    "TID252",
    # Allow datetime.now without tz
    "DTZ005", "DTZ001",

]
unfixable = [
    # Don't touch unused imports
    "F401",
]
extend-exclude = [
    "dynatrace_extension/sdk/vendor",
    "docs/*"
]

[tool.ruff.isort]
known-first-party = ["dynatrace_extensions_sdk"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG002", "ARG001"]
# typer needs to have method calls in arguments sometimes
"dynatrace_extension/cli/*" = ["B008"]

[tool.coverage.run]
source_pkgs = ["dynatrace_extension", "tests"]
branch = true
parallel = true
omit = [
    "dynatrace_extension/__about__.py",
    "dynatrace_extension/sdk/vendor/**/*",
]

[tool.coverage.paths]
dynatrace_extensions_sdk = ["dynatrace_extension", "*/dynatrace_extension"]
tests = ["tests", "*/dynatrace-extension/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[project.scripts]
dt-sdk = "dynatrace_extension.cli:app"
